/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.view.panel.hutang;

import app.table.BagiLaba;
import app.table.Bank;
import app.table.Bayarhutang;
import app.table.BayarhutangPengeluaran;
import app.table.Hutang;
import app.table.Laporan;
import app.table.Saldo;
import static app.utils.ExcelConverter.ExcelConverter;
import static app.utils.Printer.getDataList;
import app.view.ShowRoom;
import app.view.utilsPanel;
import com.joobar.csvbless.CSVUtil;
import com.joobar.csvbless.WriteStep;
import com.toedter.calendar.JDateChooserCellEditor;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.awt.Rectangle;
import java.beans.Beans;
import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.math.BigInteger;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javaslang.Tuple;
import javax.persistence.Query;
import javax.persistence.RollbackException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author SEED
 */
public class panelHutang extends JPanel {
    
    public panelHutang() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("blessingPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT h FROM Hutang h");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jButton3 = new javax.swing.JButton();
        bankQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM Bank b");
        bankList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(bankQuery.getResultList());
        jComboBox2 = new javax.swing.JComboBox<>();
        newDetailButton = new javax.swing.JButton();
        jDialog4 = new javax.swing.JDialog();
        inputPanel2 = new app.utils.inputPanel(app.table.BayarhutangPengeluaran.class);
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        newButton2 = new javax.swing.JButton();
        jDialog5 = new javax.swing.JDialog();
        inputPanel5 = new app.utils.inputPanel(app.table.BayarhutangPemasukan.class);
        jLabel6 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        newButton3 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        inputPanel1 = new app.utils.inputPanel(app.table.Hutang.class);
        newButton = new javax.swing.JButton();
        newButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        detailScrollPane = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        deleteDetailButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        jButton3.setText("Simpan");
        jButton3.addActionListener(formListener);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KAS", "BRI", "BCA", " " }));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${bankList}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);
        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.transaksi.bankId}"), jComboBox2, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        newDetailButton.setText("Baru");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), newDetailButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        newDetailButton.addActionListener(formListener);

        jDialog4.setTitle("HUTANG PENGELUARAN");
        jDialog4.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jLabel5.setText("Bank");
        inputPanel2.add(jLabel5);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${bankList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jComboBox3);
        bindingGroup.addBinding(jComboBoxBinding);

        inputPanel2.add(jComboBox3);

        newButton2.setText("Simpan");
        newButton2.addActionListener(formListener);
        inputPanel2.add(newButton2);

        jDialog4.getContentPane().add(inputPanel2, java.awt.BorderLayout.CENTER);

        jDialog5.setTitle("HUTANG PEMASUKAN");
        jDialog5.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jLabel6.setText("Bank");
        inputPanel5.add(jLabel6);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${bankList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jComboBox4);
        bindingGroup.addBinding(jComboBoxBinding);

        inputPanel5.add(jComboBox4);

        newButton3.setText("Simpan");
        newButton3.addActionListener(formListener);
        inputPanel5.add(newButton3);

        jDialog5.getContentPane().add(inputPanel5, java.awt.BorderLayout.CENTER);

        jDialog1.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialog1.setType(java.awt.Window.Type.POPUP);

        inputPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INPUT DATA PEMINJAM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        inputPanel1.setLayout(new java.awt.GridLayout(0, 2));

        newButton.setText("Simpan");
        newButton.addActionListener(formListener);
        inputPanel1.add(newButton);

        newButton1.setText("Tutup");
        newButton1.addActionListener(formListener);
        inputPanel1.add(newButton1);

        jDialog1.getContentPane().add(inputPanel1, java.awt.BorderLayout.CENTER);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPEN", "CLOSE", "SELESAI" }));

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton1.setText("Input Peminjaman");
        jButton1.addActionListener(formListener);
        jPanel3.add(jButton1);

        deleteButton.setText("Hapus");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);
        jPanel3.add(deleteButton);

        refreshButton1.setText("Refresh");
        refreshButton1.addActionListener(formListener);
        jPanel3.add(refreshButton1);

        jButton4.setText("Simpan");
        jButton4.addActionListener(formListener);
        jPanel3.add(jButton4);

        jButton6.setText("Print");
        jButton6.addActionListener(formListener);
        jPanel3.add(jButton6);

        jButton7.setText("Filter");
        jButton7.addActionListener(formListener);
        jPanel3.add(jButton7);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPEN", "CLOSE", "SELESAI" }));
        jPanel3.add(jComboBox5);

        jButton8.setText("Cari Nama");
        jButton8.addActionListener(formListener);
        jPanel3.add(jButton8);

        jTextField1.setMinimumSize(new java.awt.Dimension(300, 20));
        jTextField1.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel3.add(jTextField1);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        masterTable.setAutoCreateRowSorter(true);
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        masterTable.setRowHeight(25);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${hutangid}"));
        columnBinding.setColumnName("Hutangid");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nama}"));
        columnBinding.setColumnName("Nama");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${alamat}"));
        columnBinding.setColumnName("Alamat");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomorhp}"));
        columnBinding.setColumnName("Nomorhp");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomorktp}"));
        columnBinding.setColumnName("Nomorktp");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jumlahKeluar}"));
        columnBinding.setColumnName("T.Keluar");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jumlahKembali}"));
        columnBinding.setColumnName("T.Kembali");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jumlahKembali-jumlahKeluar}"));
        columnBinding.setColumnName("Total");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bunga}"));
        columnBinding.setColumnName("Bunga");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jumlahKembali-jumlahKeluar-bunga}"));
        columnBinding.setColumnName("Total + Bunga");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tanggalpinjam}"));
        columnBinding.setColumnName("Tanggalpinjam");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tanggallunas}"));
        columnBinding.setColumnName("Tanggallunas");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lunas}"));
        columnBinding.setColumnName("Lunas");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${LABA}"));
        columnBinding.setColumnName("P. Laba");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(14).setCellEditor(new javax.swing.DefaultCellEditor(jComboBox1)
            );
        }

        jPanel1.add(masterScrollPane, java.awt.BorderLayout.CENTER);

        add(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        masterTable.setDefaultEditor(Date.class, new JDateChooserCellEditor());
        masterTable.setDefaultEditor(String.class, new app.utils.TablePopupEditor());
        masterTable.setDefaultRenderer(java.math.BigInteger.class, new app.utils.NominalRender());
        masterTable.setDefaultRenderer(long.class, new app.utils.NominalRender());
        masterTable.setDefaultEditor(java.math.BigInteger.class, new app.utils.TablePopupEditor());
        detailTable.setDefaultEditor(Date.class, new JDateChooserCellEditor());
        detailTable.setDefaultEditor(String.class, new app.utils.TablePopupEditor());
        detailTable.setDefaultEditor(java.math.BigInteger.class, new app.utils.TablePopupEditor());
        detailTable.setDefaultRenderer(java.math.BigInteger.class, new app.utils.NominalRender());
        detailTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        detailTable.setRowHeight(25);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.bayarhutangs}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, detailTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("REF x");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tanggal}"));
        columnBinding.setColumnName("Tanggal");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pemasukan}"));
        columnBinding.setColumnName("Kembali/Pemasukan");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pengeluaran}"));
        columnBinding.setColumnName("Pinjam/Pengeluaran");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${saldo}"));
        columnBinding.setColumnName("Profit");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jenis}"));
        columnBinding.setColumnName("Jenis x");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${transaksi.bankId}"));
        columnBinding.setColumnName("Tujuan/Sumber");
        columnBinding.setColumnClass(app.table.Bank.class);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        detailScrollPane.setViewportView(detailTable);
        if (detailTable.getColumnModel().getColumnCount() > 0) {
            detailTable.getColumnModel().getColumn(7).setCellEditor(new javax.swing.DefaultCellEditor(jComboBox2));
        }

        jPanel2.add(detailScrollPane, java.awt.BorderLayout.CENTER);

        jButton2.setText("Kembali/Pemasukan");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(formListener);
        jPanel4.add(jButton2);

        jButton5.setText("Pinjaman/Pengeluaran");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton5, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton5.addActionListener(formListener);
        jPanel4.add(jButton5);

        deleteDetailButton.setText("Hapus");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteDetailButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteDetailButton.addActionListener(formListener);
        jPanel4.add(deleteDetailButton);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(formListener);
        jPanel4.add(refreshButton);

        saveButton.setText("Simpan");
        saveButton.addActionListener(formListener);
        jPanel4.add(saveButton);

        jButton9.setText("Cari Keterangan Next");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton9, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton9.addActionListener(formListener);
        jPanel4.add(jButton9);

        jTextField2.setMinimumSize(new java.awt.Dimension(300, 20));
        jTextField2.setPreferredSize(new java.awt.Dimension(200, 30));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel4.add(jTextField2);

        jLabel1.setText("0 DATA");
        jPanel4.add(jLabel1);

        jPanel2.add(jPanel4, java.awt.BorderLayout.NORTH);

        add(jPanel2);

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButton1) {
                panelHutang.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                panelHutang.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton1) {
                panelHutang.this.refreshButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                panelHutang.this.jButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton6) {
                panelHutang.this.jButton6ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton7) {
                panelHutang.this.jButton7ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton8) {
                panelHutang.this.jButton8ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                panelHutang.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton5) {
                panelHutang.this.jButton5ActionPerformed(evt);
            }
            else if (evt.getSource() == deleteDetailButton) {
                panelHutang.this.deleteDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                panelHutang.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                panelHutang.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton9) {
                panelHutang.this.jButton9ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                panelHutang.this.jButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == newDetailButton) {
                panelHutang.this.newDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton2) {
                panelHutang.this.newButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == newButton3) {
                panelHutang.this.newButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                panelHutang.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton1) {
                panelHutang.this.newButton1ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    private void deleteDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailButtonActionPerformed
        int index = masterTable.getSelectedRow();
        app.table.Hutang h = list.get(masterTable.convertRowIndexToModel(index));
        Collection<app.table.Bayarhutang> bs = h.getBayarhutangs();
        int[] selected = detailTable.getSelectedRows();
        List<app.table.Bayarhutang> toRemove = new ArrayList<app.table.Bayarhutang>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
            int count = 0;
            Iterator<app.table.Bayarhutang> iter = bs.iterator();
            while (count++ < selected[idx]) {
                iter.next();
            }
            app.table.Bayarhutang b = iter.next();
            toRemove.add(b);
//            b.getHutangid().Hitung();
            entityManager.remove(b);
        }
        bs.removeAll(toRemove);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_deleteDetailButtonActionPerformed

    private void newDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDetailButtonActionPerformed
        boolean pem = evt.getSource() == newButton3;
        int index = masterTable.getSelectedRow();
        app.table.Hutang h = list.get(masterTable.convertRowIndexToModel(index));
        Collection<app.table.Bayarhutang> bs = h.getBayarhutangs();
        if (bs == null) {
            bs = new LinkedList<app.table.Bayarhutang>();
            h.setBayarhutangs((List) bs);
        }
        app.table.Bayarhutang b = new app.table.Bayarhutang();
        Saldo ts = new app.table.Saldo();
        if (pem) {
            b = (Bayarhutang) this.inputPanel5.getTarget();
            ts.setBankId((Bank) this.jComboBox4.getSelectedItem()); 
//            System.out.println("Pemasukan");
        } else {
            b = (Bayarhutang) this.inputPanel2.getTarget();
            ts.setBankId((Bank) this.jComboBox3.getSelectedItem()); 
//            System.out.println("Pengeluaran");
        }
        b.setTransaksi(ts);
        b.setHutangid(h);
        boolean simpan = utilsPanel.simpan(entityManager, b);
        if (simpan) {
            bs.add(b);            
        }
//        entityManager.persist(b);
        h.Hitung();
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
        int row = bs.size() - 1;
        detailTable.setRowSelectionInterval(row, row);
        detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newDetailButtonActionPerformed
    public void Refresh()
    {
            this.refreshButtonActionPerformed(null);
    }
    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        try {
            
        ((app.view.FixPanel.PanelBank)ShowRoom.jPanel5).Reset();
        } catch (Exception e) {
        }
        bankList.clear();
        bankList.addAll(bankQuery.getResultList());
        java.util.Collection<Hutang> data = query.getResultList();
        Hutang total = new Hutang();
        BigInteger totalKeluar = BigInteger.ZERO;
        BigInteger totalKembali = BigInteger.ZERO;
        BigInteger totalBunga = BigInteger.ZERO;
        for (Hutang hutang : data) {
            entityManager.refresh(hutang);
            totalKeluar = totalKeluar.add(hutang.getJumlahKeluar());
            totalKembali = totalKembali.add(hutang.getJumlahKembali());
            totalBunga = totalBunga.add(hutang.getBunga());
        }

        
        
        Collection<app.table.Bayarhutang> bs = total.getBayarhutangs();
        if (bs == null) {
            bs = new LinkedList<app.table.Bayarhutang>();
            total.setBayarhutangs((List) bs);
        }
            app.table.Bayarhutang pemasukan = new app.table.BayarhutangPemasukan();
            pemasukan.setKeterangan("Total Pemasukan");
            pemasukan.setJumlah(totalKembali);
            app.table.Bayarhutang pengeluaran = new app.table.BayarhutangPengeluaran();
            pengeluaran.setKeterangan("Total Pengeluaran");
            pengeluaran.setJumlah(totalKeluar);
            bs.add(pemasukan);
            bs.add(pengeluaran);
            pengeluaran.setHutangid(total);
            pemasukan.setHutangid(total);

        total.setBunga(totalBunga);
        list.clear();
        list.addAll(data);
        list.add(total);
        
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    public List<Bank> getBankList() {
        return bankList;
    }

    public void setBankList(List<Bank> bankList) {
        this.bankList = bankList;
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<app.table.Hutang> toRemove = new ArrayList<app.table.Hutang>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            app.table.Hutang h = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(h);
            entityManager.remove(h);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        app.table.Hutang h = (app.table.Hutang) this.inputPanel1.getTarget();
//        long temp = (long) jFormattedTextField1.getValue();
//        BigInteger sisa = BigInteger.valueOf(temp);
//        h.setSisapinjaman(sisa);
//        h.setTanggallunas(jDateChooser1.getDate());
//        h.setKeterangan(jTextField1.getText());
//        BagiLaba BL = new BagiLaba();
//        BL.setH(h);
        System.out.println("bayarpinjaman = " + h.getSisapinjaman());
//        BayarhutangPengeluaran bp = new app.table.BayarhutangPengeluaran();
//            Saldo ts = new app.table.Saldo();
//            ts.setBankId((Bank) jComboBox5.getSelectedItem());
//            bp.setTransaksi(ts);
//            bp.setJumlah(h.getJumlahpinjaman());
//            bp.setHutangid(h);       
//            bp.setKeterangan(h.getKeterangan());
//            bp.setTanggal(h.getTanggalpinjam());
//        List<app.table.Bayarhutang> bh = h.getBayarhutangs();
//            bh.add((app.table.Bayarhutang)bp);
//            h.setBayarhutangs(bh);
//        BigInteger subtract = h.getSisapinjaman().subtract(h.getJumlahpinjaman());
//        h.setBunga(subtract);
//        entityManager.persist(bp);
        entityManager.persist(h);
//        entityManager.persist(BL);
        list.add(h);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        jDialog1.hide();
        saveButtonActionPerformed(evt);
//        this.refreshButtonActionPerformed(evt);
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
            refreshButton1ActionPerformed(evt);
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<app.table.Hutang> merged = new ArrayList<app.table.Hutang>(list.size());
            for (app.table.Hutang h : list) {
                merged.add(entityManager.merge(h));
            }
            list.clear();
            list.addAll(merged);
        }
//        this.refreshButtonActionPerformed(evt);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.jDialog1.setSize(800,600);
        this.jDialog1.setLocationRelativeTo(null);
        this.jDialog1.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.jDialog5.setSize(400,300);
        this.jDialog5.setLocationRelativeTo(null);
        this.jDialog5.show();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.saveButtonActionPerformed(evt);
        this.refreshButtonActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.saveButtonActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.jDialog4.setSize(400,300);
        this.jDialog4.setLocationRelativeTo(null);
        this.jDialog4.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void newButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButton2ActionPerformed
        // TODO add your handling code here:
        this.newDetailButtonActionPerformed(evt);
        this.jDialog4.hide();
        saveButtonActionPerformed(evt);
    }//GEN-LAST:event_newButton2ActionPerformed

    private void newButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButton3ActionPerformed
        // TODO add your handling code here:
        this.newDetailButtonActionPerformed(evt);
        this.jDialog5.hide();
        saveButtonActionPerformed(evt);
    }//GEN-LAST:event_newButton3ActionPerformed

    private void refreshButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton1ActionPerformed
        this.refreshButtonActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshButton1ActionPerformed

    private void newButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButton1ActionPerformed
        // TODO add your handling code here:
        jDialog1.hide();
    }//GEN-LAST:event_newButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        refreshButtonActionPerformed(evt);
        String toString = jComboBox5.getSelectedItem().toString();
        System.out.println("toString = " + toString);
        list.removeIf(a -> !a.getLABA().equals(toString));
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String nama = "%";
        nama += jTextField1.getText();
        nama += "%";        
        System.out.println("nama = " + nama);
        Query setParameter = entityManager.createQuery("SELECT h FROM Hutang h WHERE h.nama LIKE :carian")
                .setParameter("carian", nama);
        List<Hutang> res = setParameter.getResultList();           
        res.forEach((re) -> {
            entityManager.refresh(re);
        });
        list.clear();
        list.addAll(res);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        JFileChooser chooser=new JFileChooser(".");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files","xls","excel");
        chooser.addChoosableFileFilter(filter);
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(chooser.FILES_AND_DIRECTORIES);
        chooser.setDialogTitle("Save File");
        File filetemp = new File( System.getProperties().getProperty("user.home"), 
        "Data Laporan Hutang "+new Date().toString().replace(":", "-")+".xls");
        chooser.setSelectedFile(filetemp);
        int reply = chooser.showSaveDialog(this);        
        while ( chooser.getSelectedFile().exists()) {
            JOptionPane.showMessageDialog(this,"File telah ada\nGanti Nama");
            reply = chooser.showSaveDialog(this);
        }
        System.out.println("reply = " + reply);
        if (reply == 1 ) {
            return;
        }
              File file1 = chooser.getSelectedFile();
              File f = new File(file1.getParentFile(), "Data");
              f.mkdirs();
              final SimpleDateFormat formator = new SimpleDateFormat("dd/MM/yyyy");
              DecimalFormat IDR = new DecimalFormat("###0");
              List a = list;
              File T = new File(f, "Daftar Peminjam.CSV");
              List<File> cvs = new java.util.LinkedList<>();
              cvs.add(T);
              WriteStep data = CSVUtil.of(T)
                        .type(app.table.Hutang.class)
                            .properties(
                                Tuple.of("REF","hutangid", d -> d==null?" ":d),
                                Tuple.of("Nama","nama", d -> d==null?" ":d),
                                Tuple.of("Alamat","alamat", d -> d==null?" ":d),
                                Tuple.of("Nomor HP","nomorhp", d -> d==null?" ":d),
                                Tuple.of("Nomor KTP","nomorktp", d -> d==null?" ":d),
                                Tuple.of("T. Keluar","jumlahKeluar", d -> d==null?" ":IDR.format(d)),
                                Tuple.of("T. Kembali","jumlahKembali", d -> d==null?" ":IDR.format(d)),
                                Tuple.of("Total","kembaliKurangKeluar", d -> d==null?" ":IDR.format(d)),
                                Tuple.of("T. Bunga","bunga", d -> d==null?" ":IDR.format(d)),
                                Tuple.of("Total + Bunga","kembaliKurangKeluarKurangBunga", d -> d==null?" ":IDR.format(d)),
                                Tuple.of("Tanggal Lunas","tanggallunas", d -> d==null?" ":formator.format(d)),
                                Tuple.of("Tanggal Pinjam","tanggalpinjam", d -> d==null?" ":formator.format(d)),
                                Tuple.of("Status","LABA", d -> d==null?" ":d),
                                Tuple.of("Lunas","lunas", d -> d==null?" ":d),
                                Tuple.of("Keterangan","keterangan", d -> d==null?" ":d)
                            ).dataList(a);
              try {
                    data.write();            
                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(null
                            , "Gagal Print, Karena file sementara terbuka\n"+e);
                    e.printStackTrace();
                    return ;
                } 
              for (Hutang peg : list) {
                  String pe = peg.getHutangid()+"-"
                          +peg.getNama()+
//                          +peg.getKeterangan()+
                          ".CSV";
                  File p = new File(f, pe);
                  cvs.add(p);
                  List<Bayarhutang> pegawaigajiList = peg.getBayarhutangs2();
                  List b = pegawaigajiList;
                  WriteStep dataList = CSVUtil.of(p)
                        .type(app.table.Bayarhutang.class)
                            .properties(
                                Tuple.of("Ref", "id", null),
                                Tuple.of("Tanggal", "tanggal", d -> formator.format(d)),
                                Tuple.of("Keterangan", "keterangan", d -> d),
                                Tuple.of("Pengeluaran/Peminjaman", "pengeluaran", d -> d==null?"0":IDR.format(d) ),
                                Tuple.of("Pemasukan/Pelunasan", "pemasukan", d -> d==null?"0":IDR.format(d) ),
                                Tuple.of("Profit/Balance", "saldo", d -> d==null?"0":IDR.format(d) ),
                                Tuple.of("Bank", "transaksi", d -> d==null?"":d)
                    ).dataList(b);
                    dataList.write();
              }
                try {
                    ExcelConverter(cvs, file1);
                    javax.swing.JOptionPane.showMessageDialog(null
                            , "Berhasil Print");
                    Desktop.getDesktop().open(file1);
                    refreshButtonActionPerformed(evt);

                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(null
                            , "Gagal Print, Karena file sementara terbuka\n"+e);
                    e.printStackTrace();
                    return ;
                }
                
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    int indexCari = 0;
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int selectedRow = masterTable.getSelectedRow();
        app.table.Hutang h = list.get(masterTable.convertRowIndexToModel(selectedRow));
        String cariKeterangan = jTextField2.getText();
        List<Bayarhutang> cari = new LinkedList<>();
        
        for (Bayarhutang bayarhutang : h.getBayarhutangs()) {
            if (bayarhutang.getKeterangan().contains(cariKeterangan))
                cari.add(bayarhutang);
        }        
        
        jLabel1.setText(cari.size() + " Laporan");
        if (cari.size() == 0) {
            javax.swing.JOptionPane.showMessageDialog(null, "PENCARIAN GAGAL");
            indexCari = 0;
        }
        else {
            try {
                Bayarhutang get = cari.get(indexCari);                
                int indexOf = h.getBayarhutangs().indexOf(get);
                detailTable.setRowSelectionInterval(indexOf, indexOf);
                detailTable.scrollRectToVisible(new Rectangle(detailTable.getCellRect(indexOf, 0, true)));
                indexCari++;        
            } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(null, "PENCARIAN BERAKHIR");
            indexCari = 0;                                
            }
        }
        
        

//        list.
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<app.table.Bank> bankList;
    private javax.persistence.Query bankQuery;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteDetailButton;
    private javax.swing.JScrollPane detailScrollPane;
    private javax.swing.JTable detailTable;
    private javax.persistence.EntityManager entityManager;
    private app.utils.inputPanel inputPanel1;
    private app.utils.inputPanel inputPanel2;
    private app.utils.inputPanel inputPanel5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private java.util.List<app.table.Hutang> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JButton newButton1;
    private javax.swing.JButton newButton2;
    private javax.swing.JButton newButton3;
    private javax.swing.JButton newDetailButton;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refreshButton1;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panelHutang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panelHutang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panelHutang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panelHutang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new panelHutang());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
}
