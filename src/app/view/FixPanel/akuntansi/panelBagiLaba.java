/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.view.FixPanel.akuntansi;

import app.table.BagiLaba;
import app.table.Bank;
import app.table.BayarSewaMasuk;
import app.table.Bayarhutang;
import app.table.Bayarjasa;
import app.table.Bayarrental;
import app.table.Bayarsewa;
import app.table.KeuanganMobil;
import app.table.Laba;
import app.table.Laporan;
import app.table.Laporanlaba;
import app.table.Saldo;
import app.table.Transfer;
import static app.utils.ExcelConverter.ExcelConverter;
import app.view.ShowRoom;
import com.joobar.csvbless.CSVUtil;
import com.joobar.csvbless.WriteStep;
import com.toedter.calendar.JDateChooserCellEditor;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.beans.Beans;
import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.math.BigInteger;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaslang.Tuple;
import javaslang.collection.HashSet;
import javax.persistence.RollbackException;
import javax.persistence.TemporalType;
import javax.persistence.TypedQuery;
import javax.swing.DefaultCellEditor;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author SEED
 */
public class panelBagiLaba extends JPanel {
    String Value = "25";
    public panelBagiLaba() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    public panelBagiLaba(String value) {
        Value = value;
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    public void Refresh()
    {
        this.refreshButtonActionPerformed(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("blessingPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM BagiLaba b");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        idLabel = new javax.swing.JLabel();
        keteranganLabel = new javax.swing.JLabel();
        newButton = new javax.swing.JButton();
        keteranganField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField(0);
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        bankQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM Bank b");
        bankList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : bankQuery.getResultList();
        list1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        saveButton6 = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jDialog3 = new javax.swing.JDialog();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jFormattedTextField5 = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jFormattedTextField7 = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jFormattedTextField6 = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jFormattedTextField10 = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jFormattedTextField8 = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        jFormattedTextField9 = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jFormattedTextField11 = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        saveButton7 = new javax.swing.JButton();
        saveButton1 = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        saveButton2 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        saveButton3 = new javax.swing.JButton();
        saveButton5 = new javax.swing.JButton();
        saveButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        FormListener formListener = new FormListener();

        idLabel.setText("Id:");

        keteranganLabel.setText("Keterangan:");

        newButton.setText("New");
        newButton.addActionListener(formListener);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.keterangan}"), keteranganField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), keteranganField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), idField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), idField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "READY", "OPEN", "CLOSE", "SELESAI" }));

        deleteButton.setText("Delete");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        jButton4.setText("SIMPAN LAMA");
        jButton4.addActionListener(formListener);

        jDialog1.setSize(1000, 700);
        jDialog1.setTitle("Data Baru");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setModalityType(null);
        jDialog1.setType(java.awt.Window.Type.POPUP);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("LAPORAN PEMBAGIAN LABA"));
        jPanel3.setLayout(new java.awt.GridLayout(0, 2));

        jLabel1.setText("PEMBAGIAN LAPORAN KE");
        jPanel3.add(jLabel1);

        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextField2.setValue(0l);
        jPanel3.add(jFormattedTextField2);

        jLabel3.setText("KETERANGAN");
        jPanel3.add(jLabel3);
        jPanel3.add(jTextField2);

        jLabel4.setText("TANGGAL PEMBAGIAN LABA");
        jPanel3.add(jLabel4);

        jDateChooser1.setDate(new java.util.Date());
        jPanel3.add(jDateChooser1);

        jLabel5.setText("TANGGAL AWAL PENGELUARAN");
        jPanel3.add(jLabel5);

        jDateChooser2.setDate(new java.util.Date());
        jPanel3.add(jDateChooser2);

        jLabel6.setText("TANGGAL AKHIR PENGELUARAN");
        jPanel3.add(jLabel6);

        jDateChooser3.setDate(new java.util.Date());
        jPanel3.add(jDateChooser3);

        jPanel5.add(jPanel3);

        jDialog1.getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        jButton5.setText("PROSES");
        jButton5.addActionListener(formListener);
        jDialog1.getContentPane().add(jButton5, java.awt.BorderLayout.NORTH);

        list1.clear();

        saveButton6.setText("HAPUS DUPLIKAT");
        saveButton6.addActionListener(formListener);

        saveButton.setText("Simpan");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        jDialog2.setMinimumSize(new java.awt.Dimension(800, 500));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.keterangan}"), jDialog2, org.jdesktop.beansbinding.BeanProperty.create("title"));
        bindingGroup.addBinding(binding);

        jTable2.setDefaultEditor(Date.class, new JDateChooserCellEditor());
        jTable2.setDefaultEditor(String.class, new app.utils.TablePopupEditor());
        jTable2.setDefaultEditor(java.math.BigInteger.class, new app.utils.TablePopupEditor());
        jTable2.setDefaultRenderer(java.math.BigInteger.class, new app.utils.NominalRender());
        jTable2.setAutoCreateRowSorter(true);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.laporans}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, jTable2);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("REF");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tanggal}"));
        columnBinding.setColumnName("Tanggal");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pemasukan}"));
        columnBinding.setColumnName("Pemasukan");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pengeluaran}"));
        columnBinding.setColumnName("Pengeluaran");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${transaksi.bankId.namaBank}"));
        columnBinding.setColumnName("Transaksi.bank Id.nama Bank");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(jTable2);

        jDialog2.getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jButton1.setText("PRINT");
        jButton1.addActionListener(formListener);
        jDialog2.getContentPane().add(jButton1, java.awt.BorderLayout.PAGE_START);

        jDialog3.setSize(1000, 700);

        jButton6.setText("PROSES");
        jButton6.addActionListener(formListener);
        jDialog3.getContentPane().add(jButton6, java.awt.BorderLayout.NORTH);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("LABA DI TAHAN"));
        jPanel4.setLayout(new java.awt.GridLayout(0, 2));

        jLabel11.setText("JUMLAH PROFIT");
        jPanel4.add(jLabel11);

        jFormattedTextField3.setEditable(false);
        jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField3);

        jLabel13.setText("JUMLAH OPERASIONAL");
        jPanel4.add(jLabel13);

        jFormattedTextField5.setEditable(false);
        jFormattedTextField5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField5);

        jLabel12.setText("JUMLAH GAJI PEGAWAI");
        jPanel4.add(jLabel12);

        jFormattedTextField4.setEditable(false);
        jFormattedTextField4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField4);

        jLabel15.setText("JUMLAH ASSET");
        jPanel4.add(jLabel15);

        jFormattedTextField7.setEditable(false);
        jFormattedTextField7.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField7);

        jLabel14.setText("JUMLAH BUNGA BANK");
        jPanel4.add(jLabel14);

        jFormattedTextField6.setEditable(false);
        jFormattedTextField6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField6);

        jLabel18.setText("JUMLAH BIAYA PERJALANAN");
        jPanel4.add(jLabel18);

        jFormattedTextField10.setEditable(false);
        jFormattedTextField10.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField10);

        jLabel16.setText("JUMLAH TOTAL PENGELURAN");
        jPanel4.add(jLabel16);

        jFormattedTextField8.setEditable(false);
        jFormattedTextField8.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField8);

        jLabel17.setText("JUMLAH LABA BERSIH");
        jPanel4.add(jLabel17);

        jFormattedTextField9.setEditable(false);
        jFormattedTextField9.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField9);

        jLabel7.setText("JUMLAH MODAL DI TAHAN");
        jPanel4.add(jLabel7);

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField1);

        jLabel19.setText("JUMLAH TOTAL SIAP BAGI");
        jPanel4.add(jLabel19);

        jFormattedTextField11.setEditable(false);
        jFormattedTextField11.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel4.add(jFormattedTextField11);

        jLabel10.setText("TANGGAL MODAL DI TAHAN");
        jPanel4.add(jLabel10);

        jDateChooser4.setDate(new java.util.Date());
        jPanel4.add(jDateChooser4);

        jLabel8.setText("KETERANGAN MODAL DI TAHAN");
        jPanel4.add(jLabel8);
        jPanel4.add(jTextField3);

        jLabel9.setText("BANK TUJUAN MODAL DI TAHAN");
        jPanel4.add(jLabel9);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${bankList}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);

        jPanel4.add(jComboBox2);

        jDialog3.getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        setLayout(new java.awt.BorderLayout());

        saveButton7.setText("DETAIL");
        saveButton7.addActionListener(formListener);
        jPanel1.add(saveButton7);

        saveButton1.setText("CLOSE TO SELESAI");
        saveButton1.addActionListener(formListener);
        jPanel1.add(saveButton1);

        refreshButton.setText("Tampilkan Semua");
        refreshButton.addActionListener(formListener);
        jPanel1.add(refreshButton);

        saveButton2.setText("FILTER");
        saveButton2.addActionListener(formListener);
        jPanel1.add(saveButton2);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPEN", "READY", "CLOSE", "SELESAI" }));
        jPanel1.add(jComboBox3);
        jPanel1.add(jSeparator3);

        saveButton3.setText("TAMBAHKAN");
        saveButton3.addActionListener(formListener);
        jPanel1.add(saveButton3);

        saveButton5.setText("BATALKAN");
        saveButton5.addActionListener(formListener);
        jPanel1.add(saveButton5);

        saveButton4.setText("PROSES");
        saveButton4.addActionListener(formListener);
        jPanel1.add(saveButton4);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        masterScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("SEMUA"));

        masterTable.setDefaultEditor(String.class, new app.utils.TablePopupEditor());
        masterTable.setDefaultRenderer(java.math.BigInteger.class, new app.utils.NominalRender());
        masterTable.setAutoCreateRowSorter(true);
        masterTable.setRowHeight(25);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("REF");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${profit}"));
        columnBinding.setColumnName("Profit");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${laba}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setMinWidth(75);
            masterTable.getColumnModel().getColumn(0).setMaxWidth(75);
        }
        //masterTable.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(jComboBox1));
        //    masterTable.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(jComboBox1));
        //    masterTable.getColumnModel().getColumn(6).setCellEditor(new DefaultCellEditor(jComboBox1));

        jPanel2.add(masterScrollPane);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("PILIHAN"));

        jTable1.setDefaultRenderer(java.math.BigInteger.class, new app.utils.NominalRender());
        jTable1.setAutoCreateRowSorter(true);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list1, jTable1);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Ref");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${profit}"));
        columnBinding.setColumnName("Profit");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${laba}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton7) {
                panelBagiLaba.this.saveButton7ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton1) {
                panelBagiLaba.this.saveButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                panelBagiLaba.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton2) {
                panelBagiLaba.this.saveButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton3) {
                panelBagiLaba.this.saveButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton5) {
                panelBagiLaba.this.saveButton5ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton4) {
                panelBagiLaba.this.saveButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                panelBagiLaba.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                panelBagiLaba.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                panelBagiLaba.this.jButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton5) {
                panelBagiLaba.this.jButton5ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton6) {
                panelBagiLaba.this.saveButton6ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                panelBagiLaba.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton6) {
                panelBagiLaba.this.jButton6ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                panelBagiLaba.this.jButton1ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
//        ((app.view.FixPanel.PanelBank)ShowRoom.jPanel5).Reset();
        bankList.clear();
        bankList.addAll(bankQuery.getResultList());
    }//GEN-LAST:event_refreshButtonActionPerformed

    public List<Bank> getBankList() {
        return bankList;
    }

    public void setBankList(List<Bank> bankList) {
        this.bankList = bankList;
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<app.table.BagiLaba> toRemove = new ArrayList<app.table.BagiLaba>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            app.table.BagiLaba b = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(b);
            entityManager.remove(b);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        app.table.BagiLaba b = new app.table.BagiLaba();
        entityManager.persist(b);
        list.add(b);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<app.table.BagiLaba> merged = new ArrayList<app.table.BagiLaba>(list.size());
            for (app.table.BagiLaba b : list) {
                merged.add(entityManager.merge(b));
            }
            list.clear();
            list.addAll(merged);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

        java.util.List<app.table.BagiLaba> temp = new LinkedList<>();
    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        temp = new LinkedList<>();
        java.util.List<app.table.Laba> lap = new LinkedList<>();
        for (BagiLaba a : list) {
             if (a.getM() != null) {
                 if (a.getM().getStatusMobil().equals("CLOSE")) {
                     temp.add(a);                     
                 }
            }
            else if ( a.getH() != null)
            {
                if (a.getH().getLABA().equals("CLOSE")) {
                    temp.add(a);        
                }
            }
            else if ( a.getR() != null)
            {
                if (a.getR().getLABA().equals("CLOSE")) {
                temp.add(a);        
                }
            }
            else if ( a.getB() != null)
            {                
                if (a.getB().getLaba().equals("CLOSE")) {
                    temp.add(a);        
                }

            }
        }
        System.out.println("temp = " + temp.size());
        BigInteger b = BigInteger.ZERO;
        for (BagiLaba a : temp) {
             if (a.getM() != null) {
                List<KeuanganMobil> bayarjasaList = a.getM().getKeuanganMobil2();
                    for (KeuanganMobil laporan : bayarjasaList) {
                            b =b.add(laporan.getPemasukan());
                            b =b.subtract(laporan.getPengeluaran());
                    }

            }
            else if ( a.getH() != null)
            {
                List<Bayarhutang> bayarjasaList = a.getH().getBayarhutangs();
                    for (Bayarhutang laporan : bayarjasaList) {
                            b =b.add(laporan.getPemasukan());
                            b =b.subtract(laporan.getPengeluaran());
                    }
            }
            else if ( a.getR() != null)
            {
                List<Bayarrental> bayarjasaList = a.getR().getBayarrentalList();
                    for (Bayarrental laporan : bayarjasaList) {
                            b =b.add(laporan.getPemasukan());
                            b =b.subtract(laporan.getPengeluaran());
                    }

            }
            else if ( a.getB() != null)
            {                
                List<Bayarjasa> bayarjasaList = a.getB().getBayarjasaList();
                    for (Bayarjasa laporan : bayarjasaList) {
                            b =b.add(laporan.getPemasukan());
                            b =b.subtract(laporan.getPengeluaran());
                    }
            }
        }
//        Laporanlaba laporanlaba = new Laporanlaba();
//        for (BagiLaba bagiLaba : temp) {
//            Laba l = new Laba();
//            l.setKeterangan(bagiLaba.getKeterangan());
//            l.setJumlah(bagiLaba.getProfit());
//            lap.add(l);
//            l.setLaporanlabaRef(laporanlaba);
//            entityManager.persist(l);
//        }
//        entityManager.persist(laporanlaba);
        System.out.println("b = " + b);
        b = b.divide(new BigInteger("100"))
                .multiply(new BigInteger(Value));
        jFormattedTextField1.setValue(b.longValue());
//        jDialog1.setSize(300, 300);
        jDialog1.setLocationRelativeTo(null);
        jDialog1.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton1ActionPerformed
    public List getMonthList(Class kelas,Date awal,Date Akhir)
    {
        String cari1 = " AND en.tipe = '"+"OPEN"+"'";
        String que = "SELECT en FROM " + kelas.getSimpleName() + " en "
                + "where en.tanggal BETWEEN :startDate AND :endDate" + cari1
                ;
//        System.out.println("que = " + que);
       TypedQuery createQuery = entityManager.createQuery(que, kelas)
                .setParameter("startDate", awal, TemporalType.TIMESTAMP)
                .setParameter("endDate", Akhir, TemporalType.TIMESTAMP)  
                ;
        return createQuery.getResultList();
    }
        private BigInteger sumAll(List<? extends Laporan> laporanList)
    {
        BigInteger temp = new BigInteger("0");
        for (Laporan list : laporanList) {
            if (list.getTipe().equalsIgnoreCase("OPEN")) {
                list.setTipe("CLOSE");
                System.out.println(list+"->CLOSE");
            }
            temp = temp.add(list.getJumlah());
        }
        return temp;
    }
        private BigInteger sumAll(List<? extends Laporan> laporanList,int ref,int x)
    {
        BigInteger temp = new BigInteger("0");
        try {            
                String selesai = "CLOSE";
                for (Laporan lap : laporanList) {
                        lap.setTipe(selesai);
                        temp = temp.add(lap.getJumlah());
                }
        } catch (Exception e) {
        }
        return temp;
    }
        
        private BigInteger sumAllBigInteger(List<? extends Laporan> laporanList)
    {
        BigInteger temp = BigInteger.ZERO;
        for (Laporan lap : laporanList) {
                temp = temp.add(lap.getPengeluaran());
        }
        System.out.println("temp = " + temp);
        return temp;
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.out.println("app.view.panel.inven.Inventaris.jButton1ActionPerformed()");
        this.jDialog1.hide();
        Laporanlaba laporanlaba = new Laporanlaba();
        Long foo = (Long) jFormattedTextField2.getValue();
        Integer correctButComplicated = Integer.valueOf(foo.intValue());
        laporanlaba.setKeterangan(jTextField2.getText());
        laporanlaba.setKe(correctButComplicated);
        laporanlaba.setTanggal(jDateChooser1.getDate());
        Date Awal = jDateChooser2.getDate();        
        Awal.setHours(0);
        Awal.setMinutes(0);
        System.out.println("Awal = " + Awal);
        Date Akhir = jDateChooser3.getDate();
        Calendar c = Calendar.getInstance();
        c.setTime(Akhir);
        c.add(Calendar.DATE, 1);
        Akhir = c.getTime();
        System.out.println("Akhir = " + Akhir);
//        Akhir.set
        for (BagiLaba bagiLaba : temp) {
            Laba l = new Laba();
            l.setKeterangan(bagiLaba.getKeterangan());
            l.setJumlah(bagiLaba.getProfit());
            l.setLaporanlabaRef(laporanlaba);
            entityManager.persist(l);
        }
         java.util.List<Class> KelasList = new LinkedList<>();
        KelasList.add(app.table.Pengeluaran.class);
        KelasList.add(app.table.Pegawaigaji.class);
        KelasList.add(app.table.Asset.class);
        KelasList.add(app.table.BayarPihutangBunga.class);
        KelasList.add(app.table.PerjalananPengeluaran.class);
        KelasList.add(app.table.BayarPihutangBunga.class);
        Map nama = new LinkedHashMap();
        nama.put(app.table.Pengeluaran.class, "Operasional");
        nama.put(app.table.Asset.class, "Asset");
        nama.put(app.table.Pegawaigaji.class, "Gaji Pegawai");
        nama.put(app.table.PerjalananPengeluaran.class, "Biaya Perjalanan Dinas");
        nama.put(app.table.BayarPihutangBunga.class, "Beban Bungan Bank Pinjaman");
        
        final SimpleDateFormat ff = new SimpleDateFormat("dd-MM-yyyy");
        for (Class class1 : KelasList) {
            Laba l = new Laba();
            l.setKeterangan("Pengeluaran "+ nama.get(class1) + " "+ff.format(Awal)+"->"+ff.format(Akhir));
            l.setPengeluaran( sumAll(getMonthList(class1, Awal, Akhir)));
            l.setLaporanlabaRef(laporanlaba);
            entityManager.persist(l);
        }                

        BayarSewaMasuk asset = new BayarSewaMasuk();
        long v = (long) jFormattedTextField1.getValue();
        BigInteger ml = BigInteger.valueOf(v);
        asset.setPemasukan(ml);
        asset.setKeterangan(jTextField3.getText());
        asset.setTanggal(jDateChooser4.getDate());
        Saldo saldo = new Saldo();
        saldo.setBankId((Bank) this.jComboBox2.getSelectedItem());
        asset.setTransaksi(saldo);
        asset.setLaporanlaba(laporanlaba);
        laporanlaba.setModalTahan(asset);
        entityManager.persist(laporanlaba);
        entityManager.persist(asset);
                
        for (BagiLaba a : list) {
             if (a.getM() != null) {
                 if (a.getM().getStatusMobil().equals("CLOSE")) {
                     a.getM().setStatusMobil("SELESAI");
                 }
            }
            else if ( a.getH() != null)
            {
                if (a.getH().getLABA().equals("CLOSE")) {
                    a.getH().setLABA("SELESAI");               
                }
            }
            else if ( a.getR() != null)
            {
                if (a.getR().getLABA().equals("CLOSE")) {
                a.getR().setLABA("SELESAI");      
                }
            }
            else if ( a.getB() != null)
            {                
                if (a.getB().getLaba().equals("CLOSE")) {
                    a.getB().setLaba("SELESAI");
                }

            }
        }
        saveButtonActionPerformed(evt);
        //        Util.RefreshLaporan();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void saveButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton2ActionPerformed
        refreshButtonActionPerformed(evt);        
        String pilihan = jComboBox3.getSelectedItem().toString();
        System.out.println("pilihan = " + pilihan);
        list.removeIf( a -> !a.getLaba().equalsIgnoreCase(pilihan));
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton2ActionPerformed

    private void saveButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton3ActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<app.table.BagiLaba> toRemove = new ArrayList<app.table.BagiLaba>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            app.table.BagiLaba b = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(b);
//            entityManager.remove(b);
        }
        list1.addAll(toRemove);        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton3ActionPerformed

    private void saveButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton4ActionPerformed
        Set<BagiLaba> hs = new java.util.HashSet<>();
        hs.addAll(list1);
        list1.clear();
        list1.addAll(hs); 
        int size = list1.size();
        System.out.println("size = " + size);
        BigInteger sum = BigInteger.ZERO;
        for (BagiLaba bagiLaba : list1) {
            sum = sum.add(bagiLaba.getProfit());
        }
        System.out.println("sum = " + sum);
        jFormattedTextField3.setValue(sum.longValue());        
        sum = sum.divide(new BigInteger("100"))
                .multiply(new BigInteger(Value));
        jFormattedTextField1.setValue(sum.longValue());        
        jDialog1.setLocationRelativeTo(null);
        jDialog1.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton4ActionPerformed

    private void saveButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton5ActionPerformed
        int[] selected = jTable1.getSelectedRows();
        List<app.table.BagiLaba> toRemove = new ArrayList<app.table.BagiLaba>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            app.table.BagiLaba b = list1.get(jTable1.convertRowIndexToModel(selected[idx]));
            toRemove.add(b);
//            entityManager.remove(b);
        }
        list1.removeAll(toRemove);         // TODO add your handling code here:
    }//GEN-LAST:event_saveButton5ActionPerformed

    private void saveButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton6ActionPerformed

// add elements to al, including duplicates
        Set<BagiLaba> hs = new java.util.HashSet<>();
        hs.addAll(list1);
        list1.clear();
        list1.addAll(hs);
//        Set<BagiLaba> hs = new HashSet<>();
//        hs.addAll(list1);
//        al.clear();
//        al.addAll(hs);        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton6ActionPerformed

        Laporanlaba laporanlaba;
        java.util.List<Class> KelasList;
        Map nama;
        final SimpleDateFormat ff = new SimpleDateFormat("dd-MM-yyyy");
        Calendar cal;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        System.out.println("app.view.panel.inven.Inventaris.jButton1ActionPerformed()");
        this.jDialog1.hide();
        laporanlaba = new Laporanlaba();
        Long foo = (Long) jFormattedTextField2.getValue();
        Integer correctButComplicated = Integer.valueOf(foo.intValue());
        laporanlaba.setKeterangan(jTextField2.getText());
        laporanlaba.setKe(correctButComplicated);
        laporanlaba.setTanggal(jDateChooser1.getDate());
        cal = Calendar.getInstance();
        Date Awal = jDateChooser2.getDate();
        cal.setTime(Awal);
        cal.set(Calendar.HOUR_OF_DAY, cal.getActualMinimum(Calendar.HOUR_OF_DAY));
        cal.set(Calendar.MINUTE, cal.getActualMinimum(Calendar.MINUTE));   
        cal.add(Calendar.MINUTE, -1);
        Awal = cal.getTime();
        System.out.println("Awal = " + Awal);
        Date Akhir = jDateChooser3.getDate();
        cal.setTime(Akhir);
        cal.set(Calendar.HOUR_OF_DAY, cal.getActualMinimum(Calendar.HOUR_OF_DAY));
        cal.set(Calendar.MINUTE, cal.getActualMinimum(Calendar.MINUTE));   
        cal.add(Calendar.DATE, 1);
        cal.add(Calendar.MINUTE, 1);
        Akhir = cal.getTime();
        System.out.println("Akhir = " + Akhir);
        for (BagiLaba bagiLaba : list1) {
            Laba l = new Laba();
            l.setKeterangan(bagiLaba.getKeterangan());
            l.setJumlah(bagiLaba.getProfit());
            l.setLaporanlabaRef(laporanlaba);
            entityManager.persist(l);
        }
        KelasList = new LinkedList<>();
        KelasList.add(app.table.Pengeluaran.class);
        KelasList.add(app.table.Pegawaigaji.class);
        KelasList.add(app.table.Asset.class);
        KelasList.add(app.table.BayarPihutangBunga.class);
        KelasList.add(app.table.PerjalananPengeluaran.class);
        nama = new HashMap();
        nama.put(app.table.Pengeluaran.class, "Operasional");
        nama.put(app.table.Asset.class, "Asset");
        nama.put(app.table.Pegawaigaji.class, "Gaji Pegawai");
        nama.put(app.table.PerjalananPengeluaran.class, "Biaya Perjalanan Bisnis");
        nama.put(app.table.BayarPihutangBunga.class, "Beban Bunga Bank Pinjaman");
        System.out.println(nama.size());
        jFormattedTextField4.setValue(sumAllBigInteger(getMonthList(app.table.Pegawaigaji.class, Awal, Akhir)));
        jFormattedTextField5.setValue(sumAllBigInteger(getMonthList(app.table.Pengeluaran.class, Awal, Akhir)));
        jFormattedTextField6.setValue(sumAllBigInteger(getMonthList(app.table.BayarPihutangBunga.class, Awal, Akhir)));
        jFormattedTextField7.setValue(sumAllBigInteger(getMonthList(app.table.Asset.class, Awal, Akhir)));
        jFormattedTextField10.setValue(sumAllBigInteger(getMonthList(app.table.PerjalananPengeluaran.class, Awal, Akhir)));

        List<JFormattedTextField> listBig = new LinkedList<>();
        listBig.add(jFormattedTextField4);
        listBig.add(jFormattedTextField5);
        listBig.add(jFormattedTextField6);
        listBig.add(jFormattedTextField7);
        listBig.add(jFormattedTextField10);
        BigInteger totalKeluar = BigInteger.ZERO;
        Long totalMasukLong = (Long) jFormattedTextField3.getValue();                
        BigInteger totalMasuk = BigInteger.valueOf(totalMasukLong);
        for (JFormattedTextField jFormattedTextField : listBig) {
            BigInteger temp = (BigInteger) jFormattedTextField.getValue();
            totalKeluar = totalKeluar.add(temp);
        }
        System.out.println("totalKeluar = " + totalKeluar);
        jFormattedTextField8.setValue(totalKeluar);
        jFormattedTextField9.setValue( totalMasuk.subtract(totalKeluar));
        BigInteger subtract = totalMasuk.subtract(totalKeluar);
        BigInteger modalTahan = subtract.divide(new BigInteger("100")).multiply(new BigInteger(Value));
        BigInteger bersih = subtract.subtract(modalTahan);
        jFormattedTextField1.setValue(
                modalTahan);
        jFormattedTextField11.setValue(bersih);
//        for (Class class1 : KelasList) {
//            Laba l = new Laba();
//            l.setKeterangan("Pengeluaran "+ nama.get(class1) + " "+ff.format(jDateChooser2.getDate())+"->"+ff.format(jDateChooser3.getDate()));
//            l.setPengeluaran( sumAll(getMonthList(class1, Awal, Akhir), laporanlaba.getRef(), laporanlaba.getKe()));
//            l.setLaporanlabaRef(laporanlaba);
//            entityManager.persist(l);
//        }  
//        String selesai = "SELESAI LAP KE "+ laporanlaba.getKe() + " REF " + laporanlaba.getRef();
//        String selesai = "SELESAI";
//        System.out.println("selesai = " + selesai);
//        for (BagiLaba a : list1) {
//             if (a.getM() != null) {
//                 if (a.getM().getStatusMobil().equals("CLOSE")) {
//                     a.getM().setStatusMobil(selesai );
//                 }
//            }
//            else if ( a.getH() != null)
//            {
//                if (a.getH().getLABA().equals("CLOSE")) {
//                    a.getH().setLABA(selesai);               
//                }
//            }
//            else if ( a.getR() != null)
//            {
//                if (a.getR().getLABA().equals("CLOSE")) {
//                a.getR().setLABA(selesai);      
//                }
//            }
//            else if ( a.getB() != null)
//            {                
//                if (a.getB().getLaba().equals("CLOSE")) {
//                    a.getB().setLaba(selesai);
//                }
//            }
//        }
//        BayarSewaMasuk asset = new BayarSewaMasuk();
//        Transfer transfer = new Transfer();
//        long v = (long) jFormattedTextField1.getValue();
//        BigInteger ml = BigInteger.valueOf(v);
//        asset.setPemasukan(ml);
//        asset.setKeterangan(jTextField3.getText());
//        Saldo saldo = new Saldo();
//        saldo.setBankId((Bank) this.jComboBox2.getSelectedItem());
//        Saldo saldo2 = new Saldo();
//        saldo2.setBankId((Bank) this.jComboBox2.getSelectedItem());
//        asset.setTanggal(jDateChooser4.getDate());
//        asset.setTransaksi(saldo);
//        asset.setLaporanlaba(laporanlaba);
//        laporanlaba.setModalTahan(asset);
//
//        transfer.setJumlah(ml);
//        transfer.setKeterangan(jTextField3.getText());
//        transfer.setTanggal(jDateChooser4.getDate());
//        transfer.setTransaksi(saldo2);
//        asset.setTransfer(transfer);
//
//        entityManager.persist(laporanlaba);
//        entityManager.persist(asset);        
//        entityManager.persist(transfer);
//        saveButtonActionPerformed(evt);
        this.jDialog3.show();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void saveButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton7ActionPerformed

        jDialog2.setLocationRelativeTo(null);
        jDialog2.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialog3.setLocationRelativeTo(null);
        //        String selesai = "SELESAI LAP KE "+ laporanlaba.getKe() + " REF " + laporanlaba.getRef();
        Date Awal = jDateChooser2.getDate();
        cal.setTime(Awal);
        cal.set(Calendar.HOUR_OF_DAY, cal.getActualMinimum(Calendar.HOUR_OF_DAY));
        cal.set(Calendar.MINUTE, cal.getActualMinimum(Calendar.MINUTE));   
        cal.add(Calendar.MINUTE, -1);
        Awal = cal.getTime();
        System.out.println("Awal = " + Awal);
        Date Akhir = jDateChooser3.getDate();
        cal.setTime(Akhir);
        cal.set(Calendar.HOUR_OF_DAY, cal.getActualMinimum(Calendar.HOUR_OF_DAY));
        cal.set(Calendar.MINUTE, cal.getActualMinimum(Calendar.MINUTE));   
        cal.add(Calendar.DATE, 1);
        cal.add(Calendar.MINUTE, 1);
        Akhir = cal.getTime();
        for (Class class1 : KelasList) {
            Laba l = new Laba();
            l.setKeterangan("Pengeluaran "+ nama.get(class1) + " "+ff.format(jDateChooser2.getDate())+"->"+ff.format(jDateChooser3.getDate()));
            l.setPengeluaran( sumAll(getMonthList(class1, Awal, Akhir), laporanlaba.getRef(), laporanlaba.getKe()));
            l.setLaporanlabaRef(laporanlaba);
            entityManager.persist(l);
        } 
        String selesai = "SELESAI";
        System.out.println("selesai = " + selesai);
        for (BagiLaba a : list1) {
             if (a.getM() != null) {
                 if (a.getM().getStatusMobil().equals("CLOSE")) {
                     a.getM().setStatusMobil(selesai );
                 }
            }
            else if ( a.getH() != null)
            {
                if (a.getH().getLABA().equals("CLOSE")) {
                    a.getH().setLABA(selesai);               
                }
            }
            else if ( a.getR() != null)
            {
                if (a.getR().getLABA().equals("CLOSE")) {
                a.getR().setLABA(selesai);      
                }
            }
            else if ( a.getB() != null)
            {                
                if (a.getB().getLaba().equals("CLOSE")) {
                    a.getB().setLaba(selesai);
                }
            }
        }
        BayarSewaMasuk asset = new BayarSewaMasuk();
        Transfer transfer = new Transfer();
        BigInteger v = (BigInteger) jFormattedTextField1.getValue();
        BigInteger ml = v;
        asset.setPemasukan(ml);
        asset.setKeterangan(jTextField3.getText());
        Saldo saldo = new Saldo();
        saldo.setBankId((Bank) this.jComboBox2.getSelectedItem());
        Saldo saldo2 = new Saldo();
        saldo2.setBankId((Bank) this.jComboBox2.getSelectedItem());
        asset.setTanggal(jDateChooser4.getDate());
        asset.setTransaksi(saldo);
        asset.setLaporanlaba(laporanlaba);
        laporanlaba.setModalTahan(asset);

        transfer.setJumlah(ml);
        transfer.setKeterangan(jTextField3.getText());
        transfer.setTanggal(jDateChooser4.getDate());
        transfer.setTransaksi(saldo2);
        asset.setTransfer(transfer);

        entityManager.persist(laporanlaba);
        entityManager.persist(asset);        
        entityManager.persist(transfer);
        saveButtonActionPerformed(evt);
        jDialog3.hide();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    final SimpleDateFormat formator = new SimpleDateFormat("dd-MM-yyyy");

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = masterTable.getSelectedRow();
        app.table.BagiLaba b = list.get(masterTable.convertRowIndexToModel(index));
        List a = b.getLaporans();
        JFileChooser chooser=new JFileChooser(".");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files","xls","excel");
        chooser.addChoosableFileFilter(filter);
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(chooser.FILES_AND_DIRECTORIES);
        chooser.setDialogTitle("Save File");
        String temp = b.getKeterangan();
        temp = temp.replace("/", "");
        temp = temp.replace("[", "");
        temp = temp.replace("]", "");
        System.out.println("temp = " + temp);
        File filetemp = new File( System.getProperties().getProperty("user.home"), 
            temp + " " +               
                   new Date().toString().replace(":", "-")                   
                   +".xls");
        chooser.setSelectedFile(filetemp);
        chooser.showSaveDialog(null);
        File Folder =new File(chooser.getSelectedFile().getParentFile(), "Data Mobil");
        Folder.mkdirs();
        while ( chooser.getSelectedFile().exists()) {
            JOptionPane.showMessageDialog(this,"File telah ada\nGanti Nama");
            int result = chooser.showSaveDialog(this);
            if (result == JFileChooser.CANCEL_OPTION)
            {
                System.out.println("Cancel was selected");
                return;
            }
        }
        File file1 = chooser.getSelectedFile();
        File p = new File(Folder, temp+".CVS");
        WriteStep AkunPrinter = CSVUtil.of(p)
                .type(Laporan.class)
                .properties(
                        Tuple.of("Ref", "id", d -> d==null?"":d),
                        Tuple.of("Tanggal", "tanggal", d -> formator.format(d)),
                        Tuple.of("Pemasukan", "pemasukan", d -> d==null?"":d ),
                        Tuple.of("Pengeluaran", "pengeluaran", d -> d==null?"":d ),
//                        Tuple.of("Status", "tipe", d -> d==null?"":d),
//                        Tuple.of("Tipe", "jenis", d -> d==null?"":d),
                        Tuple.of("Bank", "transaksi.bankId.namaBank", d -> d==null?"":d),
                        Tuple.of("Keterangan", "keterangan", d -> d==null?"":d)
                )
                .dataList(a);        
        try {
            AkunPrinter.write();
            List<File> cvs = new java.util.LinkedList<>();
            cvs.add(p);
            ExcelConverter(cvs, file1);
            Desktop.getDesktop().open(file1);
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Gagal Print, Karena file sementara terbuka\n"+e);
            return ;
        } 

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<app.table.Bank> bankList;
    private javax.persistence.Query bankQuery;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField10;
    private javax.swing.JFormattedTextField jFormattedTextField11;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JFormattedTextField jFormattedTextField5;
    private javax.swing.JFormattedTextField jFormattedTextField6;
    private javax.swing.JFormattedTextField jFormattedTextField7;
    private javax.swing.JFormattedTextField jFormattedTextField8;
    private javax.swing.JFormattedTextField jFormattedTextField9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField keteranganField;
    private javax.swing.JLabel keteranganLabel;
    private java.util.List<app.table.BagiLaba> list;
    private java.util.List<app.table.BagiLaba> list1;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveButton1;
    private javax.swing.JButton saveButton2;
    private javax.swing.JButton saveButton3;
    private javax.swing.JButton saveButton4;
    private javax.swing.JButton saveButton5;
    private javax.swing.JButton saveButton6;
    private javax.swing.JButton saveButton7;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panelBagiLaba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panelBagiLaba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panelBagiLaba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panelBagiLaba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new panelBagiLaba("30"));
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    public static void BagiLaba(String Value)
    {
            EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame("STATUS KEUNTUNGAN /"+Value+" %MODAL DI TAHAN");
                frame.setContentPane(new panelBagiLaba(Value));
                
//                frame.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
}
